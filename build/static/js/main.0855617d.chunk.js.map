{"version":3,"sources":["components/UI/Input/Input.js","components/Table/Table.js","App.js","index.js","components/Table/Table.module.scss"],"names":["props","inputType","type","htmlFor","Math","random","id","onChange","defaultChecked","label","toUpperCase","storage","Table","state","window","localStorage","resetDisabled","head","columnState","data","fetch","this","url","response","ok","json","key","slice","replace","push","setState","loadFromStorage","JSON","parse","getItem","setItem","stringify","map","item","index","Input","onInputChange","idx","prop","className","classes","style","backgroundColor","evt","preventDefault","icon","target","querySelector","classList","toggle","removeItem","forEach","caption","onClick","onResetClick","disabled","width","height","viewBox","xmlns","d","renderHead","renderBody","React","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0855617d.chunk.js","sourcesContent":["import React from 'react';\n\nexport default props => {\n    const inputType = props.type || 'text';\n    const htmlFor = `${inputType}-${Math.random()}`;\n\n    return(\n        <>\n            <input\n                type={inputType}\n                id={htmlFor}\n                onChange={props.onChange}\n                defaultChecked='true'\n                />\n             <label htmlFor={htmlFor}>{props.label.toUpperCase()}</label>\n        </>\n    );\n};","import React from 'react';\nimport Input from '../UI/Input/Input';\nimport classes from './Table.module.scss';\n\nlet storage = null;\n\nclass Table extends React.Component {\n    state = {\n    };\n\n    constructor(props) {\n        super(props);\n\n        if(window.localStorage) {\n            storage = window.localStorage;\n        }\n\n        this.state = {\n            resetDisabled: true,\n            head: [],\n            columnState: {}, \n            data: []\n        };\n    };\n    \n    async componentDidMount() {\n        const response = await fetch(this.props.url);\n        const state = this.state;\n\n        if(response.ok) {\n            let json = await response.json();\n            state.data = json.data.slice();\n\n            for (let key in state.data[0]) {\n                key = key.replace('_', ' ');\n                state.head.push(key);\n                state.columnState[key] = true;\n            }\n            \n            this.setState({\n                state\n            });\n        }\n        \n        this.loadFromStorage();\n    }\n\n    loadFromStorage() {\n        if(storage) {\n            const columnState = JSON.parse(storage.getItem('columnState'));\n            if(columnState) {\n                const state = this.state;\n                state.columnState = columnState;\n                state.resetDisabled = false;\n                this.setState({\n                    state\n                })\n            }\n        }\n    };\n\n    onInputChange(key) {\n        const state = this.state;\n        state.columnState[key] = false;\n        state.resetDisabled = false;\n        this.setState({\n            state\n        });\n\n        if(storage) {\n            storage.setItem('columnState', JSON.stringify(state.columnState));\n        }\n    };\n\n    renderHead() {\n        return this.state.head.map((item, index) => {\n            if(this.state.columnState[item]) {\n                return (\n                    <th key={index}>\n                           <Input onChange={() => this.onInputChange(item)} label={item} type=\"checkbox\"/>\n                    </th>\n                )\n            }\n        });\n    };\n\n    renderBody() {\n        return this.state.data.map((item, index) => {\n            return (\n                <tr key={index}>\n                   { this.state.head.map((key, idx) => {\n                       if(this.state.columnState[key]) {\n                        const prop = item[key.replace(' ', '_')];\n                        return (<td className={ classes[key] } key={idx}>\n                                    { key === 'color'\n                                        ?\n                                        (<>\n                                            <div style={{ backgroundColor: prop }}></div>\n                                            <span>{prop}</span>\n                                        </>)\n                                        :\n                                        prop\n                                    }\n                                </td>);\n                       }\n                   })} \n                </tr>\n            )\n        })\n    };\n\n    onResetClick(evt) {\n        evt.preventDefault();\n\n        const icon = evt.target.querySelector('svg');\n\n        if(icon) icon.classList.toggle('rotate');\n\n        if(storage) {\n            storage.removeItem('columnState');\n        }\n        const state = this.state;\n\n        state.head.forEach(key => {\n            state.columnState[key] = true;\n        });\n\n        state.resetDisabled = true;\n\n        this.setState({\n            state\n        })\n    };\n\n    render() {\n        return(\n        <div className={classes.Table}>\n          <table>\n              <caption>\n                {this.props.caption}\n                <button onClick={(evt) => this.onResetClick(evt)} disabled={this.state.resetDisabled} type=\"button\">\n                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M7 9h-7v-7h1v5.2c1.853-4.237 6.083-7.2 11-7.2 6.623 0 12 5.377 12 12s-5.377 12-12 12c-6.286 0-11.45-4.844-11.959-11h1.004c.506 5.603 5.221 10 10.955 10 6.071 0 11-4.929 11-11s-4.929-11-11-11c-4.66 0-8.647 2.904-10.249 7h5.249v1z\"/>\n                    </svg>\n                    Reset\n                </button>\n              </caption>\n              <thead>\n                  <tr>\n                    { this.renderHead() }\n                  </tr>\n              </thead>\n              <tbody>\n                { this.renderBody() }\n              </tbody>\n          </table>\n          </div>\n        );\n    };\n};\n\nexport default Table;","import React from 'react';\nimport Table from '../src/components/Table/Table';\nimport './App.css';\n\nconst URL = 'https://reqres.in/api/unknown?per_page=12';\n\nexport default props => {\n    return(\n      <div className=\"App\">\n        <Table\n          caption=\"Pantone colors\"\n          url={URL} \n        />\n      </div>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"Table_Table__2DxTv\",\"name\":\"Table_name__37pXL\",\"id\":\"Table_id__2cFj5\",\"year\":\"Table_year__JDcZN\",\"color\":\"Table_color__2zaoL\"};"],"sourceRoot":""}